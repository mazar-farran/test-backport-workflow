name: Backport Release fixes to bee branch

on:
  pull_request:
    branches:
      - release/**
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  backport:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history is needed for cherry-pick

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Fetch target branch
        run: git fetch origin bee

      - name: Create backport branch
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME="backport-pr-${PR_NUMBER}-to-bee"
          git checkout -b $BRANCH_NAME origin/bee

      - name: Cherry-pick the merged commit
        run: |
          MERGE_COMMIT=${{ github.event.pull_request.merge_commit_sha }}
          git cherry-pick -m 1 $MERGE_COMMIT || echo "::warning ::Cherry-pick had conflicts. Manual intervention might be required."
        
      - name: Push backport branch
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          BRANCH_NAME="backport-pr-${PR_NUMBER}-to-bee"
          git push origin $BRANCH_NAME

      - name: Extract original PR metadata
        id: pr_meta
        run: |
          echo "title=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")" >> "$GITHUB_OUTPUT"
          echo "author=$(jq -r .pull_request.user.login "$GITHUB_EVENT_PATH")" >> "$GITHUB_OUTPUT"

      - name: Create pull request with GitHub CLI
        run: |
          gh pr create \
            --title "Backport PR #${{ github.event.pull_request.number }} to bee" \
            --body "This PR backports #${{ github.event.pull_request.number }} to \`bee\`.\n\n**Original PR title:** ${{ steps.pr_meta.outputs.title }}" \
            --head backport-pr-${{ github.event.pull_request.number }}-to-bee \
            --base bee \
            --reviewer "${{ steps.pr_meta.outputs.author }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

